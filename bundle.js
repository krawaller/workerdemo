/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = {
  aHeavyMethod: function(arg1,arg2){
    console.log("aHeavyMethod called in lib");
    for(var a=0; a<100000; a++){
      for(var b=0; b<10000; b++){
        
      }
    }
    return arg1 + arg2;
  },
  anotherHeavyMethod: function(arg1, arg2){
    console.log("anotherHeavyMethod called in lib");
    for(var a=0; a<70000; a++){
      for(var b=0; b<70000; b++){
        
      }
    }
    return arg1 + arg2;
  }
}

/***/ }),
/* 1 */
/***/ (function(module, exports) {

/* Generated by WorkerWrapper */

module.exports = function(pathToLib, nbrOfWorkers){

  nbrOfWorkers = nbrOfWorkers || 1;

  var workerListeners = {};
  var freeWorkers = [];
  var busyWorkers = [];
  var nextCallId = 0;

  function freeUpWorker(worker){
    busyWorkers = busyWorkers.filter(function(w){ return w !== worker; });
    freeWorkers.push(worker);
  }

  function catchWorker(){
    var worker = (freeWorkers.length ? freeWorkers : busyWorkers).shift();
    busyWorkers.push(worker);
    return worker;
  }

  function workerMessageHandler(e){
    var resultid = e.data[0];
    var result = e.data[1];
    workerListeners[resultid](result);
    delete workerListeners[resultid];
    freeUpWorker(this);
  }

  function libMethod(method){
    var args = Array.prototype.slice.call(arguments).slice(1);
    return new Promise(function(resolve,reject){
      var callid = ++nextCallId;
      var worker = catchWorker();
      worker.postMessage([method,callid,args]);
      workerListeners[callid] = resolve;
    });
  }

  for(var i=0; i<nbrOfWorkers; i++){
    var worker = new Worker(pathToLib);
    worker.onmessage = workerMessageHandler;
    freeUpWorker(worker);
  }

  return ["aHeavyMethod","anotherHeavyMethod"].reduce(function(mem,method){
    mem[method] = libMethod.bind(null,method);
    return mem;
  },{});

};


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var synclib = __webpack_require__(0);

workerlibFactory = __webpack_require__(1)
var singlelib = workerlibFactory('./lib/heavylib_worker.js',1);
var multilib = workerlibFactory('./lib/heavylib_worker.js',3);

var el = document.getElementById.bind(document);

var msgs = {};
var nextMsgId = 0;

function setLogMsg(id,msg){
  msgs[id] = msg;
  el("log").innerHTML = Object.keys(msgs).reduce(function(mem,id){
    return mem + "<li><strong>" + id.split(" ")[1] + "</strong> " + msgs[id] + "</li>";
  }, "");
}

el("sync").addEventListener("click",function(){
  var timestamp = +(new Date)
  var id = ++nextMsgId + " sync";
  setLogMsg(id, "...calculating...");
  var result = synclib.anotherHeavyMethod("a","b");
  var took = +(new Date) - timestamp;
  setLogMsg(id, "received, took " +  took);
});

el("singleworker").addEventListener("click",function(){
  var timestamp = +(new Date)
  var id = ++nextMsgId + " single";
  setLogMsg(id, "...calculating...");
  singlelib.anotherHeavyMethod("a","b").then(function(result){
    var took = +(new Date) - timestamp;
    setLogMsg(id, "received, took " + took);
  });
});

el("multiworker").addEventListener("click",function(){
  var timestamp = +(new Date)
  var id = ++nextMsgId + " multi";
  setLogMsg(id, "...calculating...");
  multilib.anotherHeavyMethod("a","b").then(function(result){
    var took = +(new Date) - timestamp;
    setLogMsg(id, "received, took " + took);
  });
});

el("clear").addEventListener("click",function(){
  el("log").innerHTML = "";
  msgs = {};
});


/***/ })
/******/ ]);